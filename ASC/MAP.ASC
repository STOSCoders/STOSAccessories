1 rem Mapper V1.3
2 rem A room definer written by Stephen Hill
5 cls physic : cls back
9 rem Select file
10 if mode=2 then print "This program only works on a COLOUR Monitor. SORRY!" : end else mode 0
11 on error goto 4900
15 if accnb<>0 then bgrab current,1 : if length(1)<>0 then 45
20 gosub 4700 : SF$=file select$(D$+"*.mbk","   Load Sprites",7) : if SF$="" then default : end 
25 cls physic : cls back : curs off 
30 if right$(SF$,4)<>".MBK" then boom : locate 0,5 : centre "This is NOT a sprite FILE!" : locate 0,6 : centre "Press any key to try again" : clear key : wait key : goto 20
39 rem Load file
40 load SF$,1 : if leek(start(1))<>$19861987 then boom : locate 0,5 : centre "This is NOT a sprite BANK!" : locate 0,6 : centre "Press any key to try again" : clear key : wait key : goto 20
44 rem Load palette
50 S=1 : gosub 2500 : if NS>220 then boom : locate 0,5 : centre "Too many sprites! Maximum is 220 " : locate 0,6 : centre "Press any key to try again" : clear key : wait key : goto 20
60 SZ=(320/SW)*(200/SH) : if SZ>500 then boom : locate 0,5 : centre "Sprites too small! Minimum size = 16x8" : locate 0,6 : centre "Press any key to try again" : clear key : wait key : goto 20
65 dim PAL(15) : for I=0 to 15 : PAL(I)=colour(I) : next I
70 fade 1 : wait 7 : gosub 10000 : gosub 5000 : gosub 4500 : wait 20
80 S=1 : gosub 2500 : limit sprite SL(0,0),SL(0,1) to SL(2,0)+64,SL(2,1)+48 : S=2 : gosub 3365 : wait vbl : S=1 : ROOM=1 : NROOM=1 : gosub 500 : gosub 600 : MXSZ=SZ : limit sprite 
85 on error goto 2060
99 rem main loop
100 ZX=zone(0)+1 : on ZX gosub 200,1000,1100,1200,1300,1400,1500,1600,1700,1800,700,900,800,1900,2000,2100,2200,2300,4200,4300,4400,3700
110 goto 100
199 rem draw blocks
200 rem Control sprite movement
210 while (zone(0)=0) : XS=(x mouse/SW) : XM=XS*SW+1 : YS=y mouse/SH : YM=YS*SH : if YM>CBY or YM+H<CTY then sprite 1,XM,YM,S : update else sprite 1,-100,0,S : wait vbl : return 
220 if inkey$=" " then 225
224 if mouse key=0 then 240 else 230
225 if CTY=199 and CBY=0 then CTY=OCTY : CBY=OCBY : sprite 1,-100,1,1 : update :  : hide on : wait vbl : HD=2 : gosub 4005 : wait 4 : HD=0 : gosub 4100 : show on : gosub 4600 : goto 240 else sprite 1,-100,1,1 : update : wait vbl : hide on : CU$=screen$(physic,0,CTY to 320,CBY) : OCTY=CTY : OCBY=CBY : HD=1 : gosub 4005 : reset zone : CTY=199 : CBY=0 : wait 4 : show on : goto 240
230 if mouse key=2 and SCREEN(XS,YS)<>0 then SCREEN(XS,YS)=0 : gosub 300 : goto 240 else if mouse key=2 then 240
235 if SCREEN(XS,YS)<>S and SCREEN(XS,YS)<>0 then gosub 300 : update : put sprite 1 : SCREEN(XS,YS)=S else update : put sprite 1 : SCREEN(XS,YS)=S
240 wend 
299 rem erase block
300 TX=max(0,XM) : TY=max(0,YM) : BX=XM+SW-1 : BX=min(319,BX) : BY=YM+SH-1 : BY=min(199,BY) : ink 0 : bar TX,TY to BX,BY
310 return 
399 rem Erase Screen
400 for R=0 to 20 : for C=0 to 50 : SCREEN(R,C)=0 : next C : next R : return 
499 rem Print number of rooms
500 qwindow 2 : curs off : inverse on : P$=str$(NROOM)-" " : P$=string$("0",3-len(P$))+P$ : locate 35,CB : print P$; : inverse off : return 
599 rem Print current room
600 qwindow 2 : curs off : inverse on : P$=str$(ROOM)-" " : P$=string$("0",3-len(P$))+P$ : locate 24,CB : print P$; : inverse off : return 
699 rem Add a room
700 gosub 3200 : if RESULT=0 then return 
705 if free<20000 then M$="OUT OF MEMORY" : M1$="Hit a key" : TF=1 : gosub 3005 : return 
710 inc NROOM : if NROOM>MXROOM then M$="Too many Maps!" : M1$="Press a key" : TF=1 : gosub 3100 : hide on : CU$=screen$(back,0,CTY to 320,CBY) : show on : gosub 3005 : dec NROOM : gosub 500 : gosub 600 : return 
720 gosub 3800 : ROOM=NROOM : ROOM$(ROOM)="" : gosub 820 : gosub 3100 : gosub 500 :  : gosub 600 : gosub 2400 : wait 8 : if (320/SW1)*(200/SH1)<=500 then SH=SH1 : SW=SW1 : H=SH : return else return 
799 rem Delete a room
800 gosub 3200 : DF=0 : if RESULT=0 then return 
801 M$="Are you sure?" : TF=true : F$="Abort!" : T$="Continue" : gosub 3000 : if RESULT=0 then gosub 3100 : return 
802 if NROOM=1 then DF=1 : ROOM$(ROOM)="" : goto 820
805 if ROOM=NROOM then ROOM$(ROOM)="" : dec NROOM : ROOM=NROOM : DF=1 : goto 820
810 for M=ROOM+1 to NROOM : ROOM$(M-1)=ROOM$(M) : next M : ROOM$(NROOM)="" : dec NROOM : DF=1
820 for R=0 to 319/SW : for C=0 to 199/SH : SCREEN(R,C)=0 : next C : next R : gosub 3900 : HD=2 : gosub 4000 : HD=0 : gosub 500 : gosub 600 : wait 8 : if DF=1 then gosub 3100 : return else return : DF=0
899 rem Insert a room
900 gosub 3200 : if RESULT=0 then return 
905 if free<20000 then M$="OUT OF MEMORY" : M1$="Hit a key" : TF=1 : gosub 3005 : return 
910 inc NROOM : if NROOM>MXROOM then M$="Too many rooms!" : M1$="Press a key" : TF=1 : gosub 3100 : hide on : CU$=screen$(back,0,CTY to 320,CBY) : show on : gosub 3005 : dec NROOM : gosub 500 : gosub 600 : return 
920 gosub 3800 : for M=NROOM to ROOM+1 step-1 : ROOM$(M)=ROOM$(M-1) : next M : ROOM$(ROOM)="" : gosub 820 : gosub 3100 : gosub 2400 : wait 8 : if (320/SW1)*(200/SH1)<=500 then SH=SH1 : SW=SW1 : H=SH1 : return else return 
999 rem Left scroll arrow (zone 1)
1000 gosub 3200 : if RESULT=0 then return 
1010 gosub 3300 : gosub 3100 : return 
1099 rem Right scroll arrow (zone 2)
1100 gosub 3200 : if RESULT=0 then return 
1110 gosub 3300 : gosub 3100 : return 
1199 rem Left Double arrow (zone 3)
1200 gosub 3200 : if RESULT=0 then return 
1210 S=2 : gosub 3300 : gosub 3100 : return 
1299 rem Right Double arrow (zone 4)
1300 gosub 3200 : if RESULT=0 then return 
1310 S=NS-1 : gosub 3300 : gosub 3100 : return 
1399 rem Dummy zone
1400 return 
1499 rem Get previous Map
1500 gosub 3200 : if RESULT=0 then return 
1510 if ROOM=1 then gosub 3100 : return 
1520 gosub 3800 : dec ROOM : gosub 3900 : HD=2 : gosub 4000 : HD=0 : gosub 3100 : gosub 600 : return 
1599 rem Get next Map
1600 gosub 3200 : if RESULT=0 then return 
1610 if ROOM=NROOM then gosub 3100 : return 
1620 gosub 3800 : inc ROOM : gosub 3900 : HD=2 : gosub 4000 : HD=0 : gosub 3100 : gosub 600 : return 
1699 rem Get first room
1700 gosub 3200 : if RESULT=0 then return 
1705 if ROOM=1 then gosub 3100 : return 
1710 gosub 3800 : ROOM=1 : gosub 3900 : HD=2 : gosub 4000 : HD=0 : gosub 3100 : gosub 600 : return 
1799 rem Get last room
1800 gosub 3200 : if RESULT=0 then return 
1805 if ROOM=NROOM then gosub 3100 : return 
1810 gosub 3800 : ROOM=NROOM : gosub 3900 : HD=2 : gosub 4000 : HD=0 : gosub 3100 : gosub 600 : return 
1899 rem Load rooms from disc
1900 gosub 3200 : if RESULT=0 then return 
1905 hide on : gosub 3100 : CU$=screen$(physic,0,CTY to 320,CBY) : show on : TRF=0
1910 gosub 4700 : MF$=file select$(D$+"*.map","   Load Maps",7) : if right$(MF$,4)<>".MAP" and MF$<>"" then boom : goto 1910
1911 if MF$="" then 1960
1915 on error goto 2060
1920 cls physic : cls back : open in #1,MF$ : input #1,FT : if FT<>$18071961 then boom : close #1 : goto 1960
1925 locate 0,3 : centre "Loading rooms"
1930 input #1,NROOM : if NROOM>MXROOM then boom : close #1 : goto 1960
1940 for I=1 to NROOM : if free>20000 then line input #1,ROOM$(I) else if TRF=0 then TRF=I
1950 CN=I : gosub 4800 : next I : close #1
1955 if TRF then M$="Map Truncated at "+(str$(TRF-1)-" ") : M1$="Due to lack of space" : M2$="Press any key" : TF=2 : gosub 3005 : NROOM=TRF-1
1960 cls physic : cls back : fade 1 : wait 7 : gosub 3900 : HD=2 : gosub 4005 : HD=0 : gosub 500 : gosub 600 : return 
1999 rem Save rooms to disc
2000 gosub 3200 : if RESULT=0 then return 
2005 gosub 3800
2006 hide on : gosub 3100 : CU$=screen$(physic,0,CTY to 320,CBY) : show on 
2010 gosub 4700 : MF$=file select$(D$+"*.map","   Save Maps",7) : if right$(MF$,4)<>".MAP" and MF$<>"" then boom : goto 2010
2011 if MF$="" then 2050
2015 on error goto 2060
2020 cls physic : cls back : open out #1,MF$ : print #1,$18071961 : print #1,NROOM
2025 locate 0,3 : centre "Saving rooms"
2030 L=0 : for I=1 to NROOM : L=L+len(ROOM$(I)) : next I : if L>dfree then M$="Not enough space" : TF=0 : gosub 3005 : close #1 : goto 2050
2040 for I=1 to NROOM : print #1,ROOM$(I) : CN=I : gosub 4800 : next I : close #1
2050 fade 1 : wait 7 : cls physic : cls back : HD=2 : gosub 4005 : HD=0 : return 
2060 cls physic : cls back : if (errn>=48 and errn<54) or errn=65 then boom : M$="Disc error:" : M1$="Please hit a key" : TF=1 : gosub 3005 : gosub 4005 : close #1 : resume 100
2070 boom : M$="Error "+str$(errn) : M1$="Please hit a key" : TF=1 : gosub 3005 : gosub 4005 : gosub 500 : gosub 600 : S=2 : gosub 3365 : resume 100
2099 rem Save ascii program
2100 gosub 3200 : if RESULT=0 then return 
2110 NL=25 : LS=50010 : hide on : wait vbl : CU$=screen$(physic,0,CTY to 320,CBY) : gosub 3800 : show on 
2120 gosub 4700 : AF$=file select$(D$+"*.asc","Save room as data statements",7) : if right$(AF$,4)<>".ASC" and AF$<>"" then boom : goto 2120
2125 if AF$="" then 2195
2130 cls back : cls physic : M$="Data saved at 50000-" : T$="Yes!" : F$="Abort?" : TF=true : HD=1 : gosub 3005 : HD=0 : cls physic : cls back : if RESULT=0 then 2195
2135 L=0 : for I=1 to NROOM : L=L+len(ROOM$(I)) : next I : if L*5>dfree then M$="Not enough space" : TF=0 : gosub 3005 : goto 2195
2136 locate 0,3 : centre "Saving data"
2139 rem Open file and output redraw subroutine
2140 hide on : restore 50011 : open out #1,AF$ : read N : for I=0 to N-1 : read C$ : print #1,C$ : next I
2149 rem Output number of rooms and their size
2150 print #1,"50005 data "+(str$(NL)-" ")+","+(str$(NROOM)-" ")
2159 rem Save data
2160 for R=1 to NROOM
2165 CN=R : gosub 4800
2169 rem Write size of room and the grid size
2170 RM$=ROOM$(R) : LRM=len(RM$) : D$=(str$(LS)-" ")+"data "+mid$(RM$,1,2)+","+mid$(RM$,3,2)+"," : LRM=(LRM-4) : LM=5 : LF=0
2174 rem Output each individual data line
2175 for L=1 to (LRM/20)+1 : LL=20
2180 while (LRM>0 and LL>0) : D$=D$+str$(asc(mid$(RM$,LM,1))-33)-" "+"," : inc LM : dec LRM : dec LL : wend 
2182 if right$(D$,1)="," then D$=left$(D$,len(D$)-1)
2184 if len(D$)>10 then print #1,D$
2185 if LRM>=0 then inc LS : inc LF
2190 D$=(str$(LS)-" ")+"data " : next L : LS=LS+NL-LF : next R : close #1
2195 ink 1 : HD=2 : gosub 4005 : HD=0 : swap S,SO : S=2 : gosub 3365 : S=SO : gosub 3100 : return 
2199 rem Quit
2200 gosub 3200 : if RESULT=0 then return 
2210 TF=true : M$="Really Quit?" : T$="YES!" : F$="NO" : gosub 3000 : if RESULT=false then gosub 3100 : return 
2230 default : end 
2299 rem Set Grid
2300 gosub 3200 : if RESULT=0 then return 
2310 gosub 2400 : if SH1=SH and SW1=SW then M$="Same size!" : TF=0 : gosub 3000 : gosub 3100 : return 
2320 ROW=320/SW1 : COL=200/SH1 : if ROW*COL>500 then M$="Sprite too small!" : TF=0 : gosub 3000 : gosub 3100 : return 
2330 SZ=ROW*COL : MXSZ=max(SZ,MXSZ) : M$="Warning!" : M1$="This option erases" : M2$=" your current room!" : TF=2 : gosub 3000
2340 M$="New size = "+(str$(SW1)-" ")+" by "+(str$(SH1)-" ") : TF=true : F$="Abort!" : T$="Ok" : gosub 3000 : if RESULT=0 then 3100 : return 
2380 gosub 400 : SH=SH1 : SW=SW1 : H=SH1 : ROOM$(ROOM)="" : gosub 4000 : gosub 3100 : return 
2399 rem Get sprite parameters
2400 CSP=SP+(S-1)*8 : SW1=peek(CSP+4)*16 : SH1=peek(CSP+5) : HOTX=peek(CSP+6) : HOTY=peek(CSP+7) : return 
2500 SPB=start(1)+4 : SP=SPB+leek(SPB+mode*4) : NS=deek(SPB+12+mode*2) : CSP=SP+(S-1)*8 : SW=peek(CSP+4)*16 : SH=peek(CSP+5) : HOTX=peek(CSP+6) : HOTY=peek(CSP+7) : return 
2600 R$=str$(R)-" " : R$=string$("0",L-len(R$))+R$ : return 
2699 rem Switch out control panel
2700 off : cls back,0,0,CTY to 320,CBY : cls physic,0,0,CTY to 320,CBY : screen$(back,0,CTY)=CU$ : screen$(physic,0,CTY)=CU$ : return 
2999 rem Create a dialogue box
3000 hide on : wait vbl : CU$=screen$(physic,0,CTY to 320,CBY+1) : show on : gr writing 1 : writing 1
3005 gr writing 1 : window 1 : clw : scroll off : curs off : locate 0,0 : centre M$ : locate 0,2 : wait 4 : if TF=-1 then inverse on : TT=10-len(T$) : FT=10-len(F$) : print space$(TT/2)+T$+space$(TT/2); : locate 10,2 : print space$(FT/2)+F$+space$(FT/2); : inverse off : ink 0 :  : draw 112,WTY+16 to 112,WTY+40
3010 if TF=2 then locate 0,1 : centre M1$ : locate 0,2 : centre M2$ : TF=0
3011 clear key : if TF=1 then locate 0,1 : centre M1$ : TF=0
3013 if TF<>0 then 3015
3014 if inkey$="" and mouse key=0 then 3014 else 3020
3015 XM=x mouse : YM=y mouse : if YM>ZN(5,1) and YM<ZN(5,3) and mouse key=1 then RESULT=(XM<113) else 3015
3020 qwindow 2 : if TF<>1 and HD<>1 then cls physic,0,0,CTY to 319,CBY : cls back,0,0,CTY to 319,CBY : screen$(physic,0,CTY)=CU$ : screen$(back,0,CTY)=CU$ : return 
3099 rem Invert button
3100 gr writing 3 : ink 1 : bar ZN(ZX-1,0),ZN(ZX-1,1) to ZN(ZX-1,2),ZN(ZX-1,3) : gr writing 1 : return 
3199 rem Test button to see if it has been pressed
3200 ZT=zone(0) : MK=mouse key : if ZT<>ZX-1 then RESULT=false : return 
3210 if MK=0 then 3200
3230 clear key : if MK=1 then gosub 3100 : RESULT=true : return 
3240 RESULT=false : return 
3299 rem Select a sprite
3300 hide : limit sprite SL(0,0),SL(0,1) to SL(2,0)+64,SL(2,1)+48 : DX=(ZX-1) mod 2 : if DX=1 then 3340
3310 if S=NS then limit sprite : show : return 
3330 for I=2 to 0 step-1 : SI=S+I : swap S,SI : gosub 2400 : swap S,SI : gosub 3500 : sprite 1,SL(I,0)+(64-SW1)/2,SL(I,1)+(50-SH1)/2-7*(SH1>64),SI : update : put sprite 1 : next I : sprite 1,-100,0,1 : S=S+1 : gosub 3600 : limit sprite : show : gosub 2400 : H=max(SH,SH1) : return 
3340 if S=1 then limit sprite : show : return 
3365 if S<3 then I=0 : gosub 3500 : for I=1 to 2 : SI=S+I-2 : swap S,SI : gosub 2400 : swap S,SI : gosub 3500 : sprite 1,SL(I,0)+(64-SW1)/2,SL(I,1)+(50-SH1)/2-7*(SH1>64),SI : update : put sprite 1 : next I : sprite 1,-100,0,1 : S=S-1 : gosub 3600 : limit sprite : show : gosub 2400 : H=max(SH1,SH2) : return 
3370 for I=0 to 2 : SI=S+I-2 : swap S,SI : gosub 2400 : swap S,SI : gosub 3500 : sprite 1,SL(I,0)+(64-SW1)/2-2,SL(I,1)+(50-SH1)/2-7*(SH1>64),SI : update : put sprite 1 : next I : sprite 1,-100,0,1 : S=S-1 : gosub 3600 : limit sprite : show : gosub 2400 : H=max(SH1,SH) : return 
3499 rem Clear a slot for the sprites
3500 cls physic,0,SL(I,0),SL(I,1) to SL(I,0)+64,SL(I,1)+49 : cls back,0,SL(I,0),SL(I,1) to SL(I,0)+64,SL(I,1)+49 : ink 1 : draw SL(2,0)+64,SL(2,1) to SL(2,0)+64,SL(2,1)+49 : return 
3599 rem Print sprite numbers
3600 qwindow 2 : curs off : inverse on : for P=-1 to 1 : P$=str$(S+P)-" " : P$=string$("0",3-len(P$))+P$ : locate 12+P*8,CB+1 : print P$; : next P : inverse off : return 
3700 return 
3799 rem Load screen into string array
3800 R=SW : L=2 : gosub 2600 : T$=R$ : R=SH : L=2 : gosub 2600 : ROOM$(ROOM)=T$+R$ : for I=0 to 319/SW : for J=0 to 199/SH
3820 ROOM$(ROOM)=ROOM$(ROOM)+chr$(SCREEN(I,J)+33)
3830 next J : next I : return 
3899 rem Get screen from string array
3900 if ROOM$(ROOM)="" then gosub 400 : return 
3910 SW=val(left$(ROOM$(ROOM),2)) : SH=val(mid$(ROOM$(ROOM),3,2)) : RM$=right$(ROOM$(ROOM),len(ROOM$(ROOM))-4) : gosub 400 : L=1 : for I=0 to 319/SW : for J=0 to 199/SH : S1=asc(mid$(RM$,L,1))-33 : if S1>0 then SCREEN(I,J)=S1 else SCREEN(I,J)=0
3920 inc L : next J : next I : return 
3999 rem Redraw room from screen array
4000 hide on : fade 1 : wait 7 : CU$=screen$(back,0,CTY to 320,CBY)
4005 cls physic : cls back : for I=0 to 319/SW : for J=0 to 199/SH
4010 if SCREEN(I,J)<>0 and SCREEN(I,J)<=NS then sprite 1,I*SW+1,J*SH,SCREEN(I,J) : update : put sprite 1
4020 next J : next I : sprite 1,-100,0,1 : if HD=1 then show on : return 
4025 if HD<>2 then 4030
4026 update : if CTY<8 then cls physic,0,0,0 to 320,CBY : cls back,0,0,0 to 320,CBY
4027 if CTY>125 then cls physic,0,0,CTY to 320,200 : cls back,0,0,CTY to 320,200
4030 wait vbl : gosub 2700 : gosub 4500 : show on : return 
4099 rem Reset zones
4100 for Z=1 to NZ : set zone Z,ZN(Z,0),ZN(Z,1) to ZN(Z,2),ZN(Z,3) : next Z : return 
4199 rem Move control window to top
4200 gosub 3200 : if RESULT=0 then return 
4210 if CTY=6 then gosub 3100 : return 
4215 gosub 3100 : hide on : fade 1 : wait 7 : CU$=screen$(physic,0,CTY to 320,CBY)
4220 for I=1 to NZ : for J=0 to 1 : ZN(I,J*2+1)=ZN(I,J*2+1)-CTY+6 : next J : next I : for I=0 to 3 : SL(I,1)=SL(I,1)-CTY+6 : next I : reset zone : gosub 4100
4230 CTY=6 : CBY=CTY+CW : OB=ytext(CTY+32) : qwindow 1 : windmove 2,OB : border 7 : WTY=CTY+22 : HD=2 : gosub 4005 : HD=0 : qwindow 2 : CB=CTY/8 : gosub 4500 : return 
4299 rem Move control windw to base
4300 gosub 3200 : if RESULT=0 then return 
4310 if CTY=126 then gosub 3100 : return 
4315 gosub 3100 : hide on : fade 1 : wait 7 : CU$=screen$(physic,0,CTY to 320,CBY)
4320 for I=1 to NZ : for J=0 to 1 : ZN(I,J*2+1)=ZN(I,J*2+1)-CTY+126 : next J : next I : for I=0 to 3 : SL(I,1)=SL(I,1)-CTY+126 : next I : reset zone : gosub 4100
4330 CTY=126 : CBY=CTY+CW : OB=(CTY+32)/8 : qwindow 1 : windmove 2,OB : border 7 : WTY=CTY+22 : HD=2 : gosub 4005 : HD=0 : qwindow 2 : CB=CTY/8 : gosub 4500 : return 
4399 rem Move control window around
4400 MK=0 : while zone(0)=20 and MK=0 : MK=mouse key : wend 
4405 if zone(0)<>20 then return 
4410 hide on : CU$=screen$(physic,0,CTY to 320,CBY) : gosub 3100 : gr writing 3 : YT=CTY : box 0,YT to 319,YT+CW : show on 
4420 repeat 
4421 YT1=(y mouse/8)*8 : if YT1<=0 or YT1>128 then goto 4421
4425 box 0,YT to 319,YT+CW : box 0,YT1 to 319,YT1+CW : YT=YT1
4430 until mouse key=0
4440 fade 1 : wait 7 : for I=1 to NZ : for J=0 to 1 : ZN(I,J*2+1)=ZN(I,J*2+1)-CTY+YT-2 : next J : next I : for I=0 to 3 : SL(I,1)=SL(I,1)-CTY+YT-2 next I : reset zone : gosub 4100 : gosub 3100
4450 CTY=YT-2 : CBY=YT+CW : OB=(CTY+32)/8 : qwindow 1 : windmove 2,OB : border 7 : WTY=CTY+22 : HD=2 : gosub 4005 : HD=0 : qwindow 2 : CB=CTY/8 : wait 5 : gr writing 1
4499 rem Fade back screen
4500 fade 3,PAL(0),PAL(1),PAL(2),PAL(3),PAL(4),PAL(5),PAL(6),PAL(7),PAL(8),PAL(9),PAL(10),PAL(11),PAL(12),PAL(13),PAL(14),PAL(15) : wait 21 : return 
4600 if y mouse<=CBY and y mouse+H>=CTY then dreg(0)=44 : dreg(1)=x mouse : dreg(2)=CTY-2 : trap 5 : wait vbl : return else return 
4699 rem Get directory path
4700 D$=drive$+":"+dir$+"\" : return 
4799 rem Print place in save/load
4800 locate 0,5 : centre "Current room "+(str$(CN)-" ") : locate 0,6 : centre "Out of "+(str$(NROOM)-" ")+" rooms" : return 
4900 boom : resume 20
4999 rem Get sprite pallete
5000 XP=hunt(start(1) to start(1)+length(1),"PALT") : if XP=0 then return 
5010 XP=XP+4 : for I=0 to 15 : PAL(I)=deek(I*2+XP) : next I : return 
9999 rem Initialization section
10000 MXROOM=400 : rem Change if required on a 1040ST
10010 dim ROOM$(MXROOM) : rem Dimension rooms
10020 dim SCREEN(40,50) : rem dimension temporary storage
10030 CTY=126 : CW=71 : CBY=CTY+CW : WTX=16 : WW=192 : WH=40 : WTY=CTY+22 : windopen 1,xtext(WTX)+1,ytext(WTY)+4,xtext(WW)-2,ytext(WH)+4,7
10035 windopen 2,0,0,40,25 : cls physic : cls back
10040 unpack 5,back : hide on : CU$=screen$(back,0,CTY-2 to 320,199) : CB=15 : cls physic : cls back : gosub 2700
10050 reset zone : restore 50000 : read NZ : dim ZN(NZ,3)
10060 for Z=1 to NZ : for N=0 to 3 : read ZN(Z,N) : next N : next Z
10065 for Z=1 to NZ : for N=0 to 1 : ZN(Z,N*2+1)=ZN(Z,N*2+1)+2 : next N : next Z : gosub 4100
10070 dim SL(3,2) : for I=0 to 2 : for J=0 to 1 : read SL(I,J) : next J : next I
10075 for I=0 to 2 : SL(I,1)=SL(I,1)+2 : next I
10080 set zone NZ+1,0,CTY to 319,CTY+20
11000 show on : get palette (back) : for I=0 to 15 : PAL(I)=colour(I) : next I : return 
49999 rem Zone data
50000 data 20
50001 data 0,144,15,169,208,144,223,169,0,169,15,194
50002 data 208,169,223,194,17,145,209,194
50003 data 223,144,247,154,247,144,271,154,223,154,247,164
50004 data 247,154,271,164,223,164,271,174,223,174,271,184,223,184,271,194
50005 data 272,144,317,154,272,154,317,164,272,164,317,174
50006 data 272,174,317,184,272,184,317,194
50007 data 0,124,26,134,25,124,61,134,62,124,155,134
50008 rem Data for slots
50010 data 17,145,83,145,144,145
50011 data 3,"50000 restore 50005:read nl,nroom:if room>nroom or room<=0 then boom:return"
50012 data "50001 restore 50010+(room-1)*nl:read gridw,gridh: cls physic:cls back:for I=0 to 319/gridw : for j=0 to 199/gridh:read s : if s>0 then sprite 1,i*gridw+1,j*gridh,s:update : put sprite 1"
50013 data "50002 next j:next i:wait vbl:sprite 1,100,-100,1:return"
