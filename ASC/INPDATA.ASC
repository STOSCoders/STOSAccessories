1 rem ****************************
2 rem *                          *
3 rem *        BANK INPUT        *
4 rem *                          *
5 rem *  Part of the STOS basic  *
6 rem *    By Fran‡ois Lionet    *
7 rem * (c) 1988  Jawx/Mandarin  *
8 rem *                          *
9 rem **********15/8/88***********
10 key off : if mode=0 then mode 1
15 dim D(8),UNP(8)
20 for X=1 to 15 : erase X : next X
100 locate 0,5 : centre ">>> MEMORY BANK INPUT <<<"
105 locate 0,10 : print "Please enter :"
110 locate 20,12 : input "- Bank number :";BN
115 locate 20,14 : input "- Bank length :";BL
120 if BN>15 or BN<0 or BL<=0 then cls : goto 100
130 cls
135 locate 1,4 : centre "When the end of the bank is reached," : print : print : centre "the program saves it (fortunately!)."
140 print : print : print : print : centre "Enter the numbers as they are listed." : print : print : centre "You can omit the zero at the beginning of the numbers," : print : print : centre "but YOU MUST ENTER THE ASTERISK when you encounter one!"
145 print : print : centre "The asterisk means that the following data is compacted:" : print : print : centre "It reduces considerably the amount of data you have to enter..."
150 print : print : print : centre "Don't loose courage!"
155 locate 1,23 : centre "... Press any key to begin ..." : clear key : wait key 
200 cls
205 home : print "-------------------------------------------------------------------------------"
210 print "| Address |                          DATAS                         | Checksum |"
215 print "-------------------------------------------------------------------------------"
216 locate 0,23 : print "-------------------------------------------------------------------------------"
220 windopen 1,0,3,80,20,0
225 for X=0 to 19
230 locate 0,X : print "|         |                                                        |          |";
235 next X
240 home 
250 reserve as data BN,BL
255 AP=start(BN) : ADEND=start(BN)+BL
1000 repeat 
1005 YY=ycurs : locate 0,YY : print "|         |                                                        |          |"; : centre "Press RETURN to accept address (or type new address)" : locate 3,YY : print hex$(AP-start(BN),4)-"$";
1010 A$=inkey$ : if A$="" then 1010
1015 if A$=chr$(13) then 1030
1020 put key A$ : locate 3,YY : print "    "; : locate 2,YY : line input A$ : A=val("$"+A$) : AP=start(BN)+A : locate 0,YY : print "|         |"; : locate 3,YY : print hex$(AP-start(BN),4)-"$";
1025 if AP>=ADEND then wait 5 : bell : A$="" : goto 1020
1030 centre space$(55) : CHK=0 : for N=0 to 7
1035 locate N*6+15,YY : line input D$;
1040 if left$(D$,1)<>"*" then UNP(N)=false : D(N)=val("$"+D$) : CHK=CHK+D(N) : locate N*6+14,YY : print " ";hex$(D(N),4)-"$";"     "; : goto 1050
1045 if left$(D$,1)="*" then D$=D$-"*" : UNP(N)=true : D(N)=val("$"+D$) : CHK=CHK+D(N)+$10000 : locate N*6+15,YY : print "*";hex$(D(N),4)-"$";"    ";
1050 next N
1055 locate 69,YY : line input D$; : C=val("$"+D$) : locate 69,YY : print " ";hex$(C,5)-"$";"  ";
1060 if C<>CHK or CHK=0 then wait 5 : boom : wait 25 : clear key : centre "--- Checksum error! Please re-enter the line. ---" : print : goto 1005
1065 A=AP : for N=0 to 7
1070 if UNP(N)=0 then doke A,D(N) : A=A+2 : goto 1085
1075 D=D(N)/256 : NB=D(N) mod 256 : if (NB=0) or (btst(0,NB)<>0) then C=-1 : goto 1060
1080 for X=0 to NB-1 : poke A,D : inc A : next X
1085 next N : AP=A
1090 print : inc LINE : until A>=ADEND
1100 cls
1105 locate 0,10 : centre "HURRAH ! You've reached the end!"
1110 locate 0,20 : centre "Press any key to save your bank."
1115 clear key : wait key 
1120 F$=file select$("*.MBK","   Enter the name of your bank",2)
1125 if F$="" then bell : goto 1120
1130 if instr(F$,".")=0 then F$=F$+".MBK"
1135 if instr(F$,".MBK")=0 then bell : goto 1120
1140 cls : locate 0,12 : centre "... SAVING ..." : on error goto 1200
1145 save F$,BN
1150 on error goto 0
1155 cls : locate 0,8 : centre "To load it in your program," : print : print : centre "use the following statement in direct mode:"
1160 print : print : print : centre "LOAD "+chr$(34)+F$+chr$(34)+" <return>"
1165 locate 1,22 : centre "... Press any key ..."
1170 for X=0 to 15 : erase X : next X
1175 clear key : wait key : default : end 
1200 boom : cls : locate 0,12 : centre "DISK ERROR!" : wait 50
1205 resume 1210
1210 on error goto 0
1215 cls : locate 0,10 : centre "Check your drive!"
1220 goto 1110
